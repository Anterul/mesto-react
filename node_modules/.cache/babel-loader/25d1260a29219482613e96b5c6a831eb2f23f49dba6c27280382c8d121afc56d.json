{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport function register(password, email) {\n  return fetch(`${BASE_URL}/singup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n}\n;\nexport function authorize(identifier, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      identifier,\n      password\n    })\n  }).then(response => response.json()).then(data => {\n    if (data.user) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  }).catch(err => console.log(err));\n}\n;\nexport function getContent(token) {\n  return fetch(`${BASE_URL}/users/me`), {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  };\n}","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","status","json","e","res","catch","err","console","log","authorize","identifier","data","user","localStorage","setItem","jwt","getContent","token"],"sources":["/home/anteru/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["\nexport const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport function register(password, email) {\n  return fetch(`${BASE_URL}/singup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n};\n\nexport function authorize(identifier, password) {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({identifier, password})\n  })\n  .then((response => response.json()))\n  .then((data) => {\n    if (data.user){\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  })\n  .catch(err => console.log(err))\n};\n\nexport function getContent(token) {\n  return fetch(`${BASE_URL}/users/me`), {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    }\n  }\n}"],"mappings":"AACA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,SAASC,QAAQ,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACxC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,QAAQ;MAAEC;IAAK,CAAC;EACxC,CAAC,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAC;QAC1B,OAAOD,QAAQ,CAACE,IAAI,EAAE;MACxB;IACF,CAAC,CAAC,OAAMC,CAAC,EAAC;MACR,OAAQA,CAAC;IACX;EACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,GAAG,IAAK;IACb,OAAOA,GAAG;EACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACnC;AAAC;AAED,OAAO,SAASG,SAAS,CAACC,UAAU,EAAEnB,QAAQ,EAAE;EAC9C,OAAOE,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACY,UAAU;MAAEnB;IAAQ,CAAC;EAC7C,CAAC,CAAC,CACDQ,IAAI,CAAEC,QAAQ,IAAIA,QAAQ,CAACE,IAAI,EAAE,CAAE,CACnCH,IAAI,CAAEY,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,IAAI,EAAC;MACZC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC;MACrC,OAAOJ,IAAI;IACb;EACF,CAAC,CAAC,CACDN,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;AACjC;AAAC;AAED,OAAO,SAASU,UAAU,CAACC,KAAK,EAAE;EAChC,OAAOxB,KAAK,CAAE,GAAEJ,QAAS,WAAU,CAAC,EAAE;IACpCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAI,UAASsB,KAAM;IACpC;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}