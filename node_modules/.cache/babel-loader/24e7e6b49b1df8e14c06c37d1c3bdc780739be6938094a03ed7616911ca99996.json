{"ast":null,"code":"import _classCallCheck from\"/home/anteru/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/anteru/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this.authorization=headers.authorization;}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}return res.json();}},{key:\"getUserInfo\",value:function getUserInfo(url){return fetch(url,{method:'GET',headers:{authorization:this.authorization}}).then(this._getResponseData);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'GET',headers:{authorization:this.authorization}}).then(this._getResponseData);}},{key:\"submitProfileData\",value:function submitProfileData(name,about){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:{authorization:this.authorization,'Content-Type':'application/json'},body:JSON.stringify({name:name,about:about})}).then(this._getResponseData);}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id),{method:'DELETE',headers:{authorization:this.authorization}}).then(this._getResponseData);}},{key:\"addNewCard\",value:function addNewCard(name,link){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:{authorization:this.authorization,'Content-Type':'application/json'},body:JSON.stringify({name:name,link:link})}).then(this._getResponseData);}},{key:\"likeCard\",value:function likeCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:'PUT',headers:{authorization:this.authorization}}).then(this._getResponseData);}},{key:\"dislikeCard\",value:function dislikeCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:'DELETE',headers:{authorization:this.authorization}}).then(this._getResponseData);}},{key:\"updateAvatar\",value:function updateAvatar(avatarUrl){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:this.authorization,'Content-Type':'application/json'},body:JSON.stringify({avatar:avatarUrl})}).then(this._getResponseData);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){if(isLiked){return this.likeCard(id);}else{return this.dislikeCard(id);}}}]);return Api;}();var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-57\",headers:{authorization:'cc8211c2-a478-4e6c-819c-a7ec6fb1096c'}});export default api;","map":{"version":3,"names":["Api","_ref","baseUrl","headers","_classCallCheck","_baseUrl","authorization","_createClass","key","value","_getResponseData","res","ok","Promise","reject","concat","status","json","getUserInfo","url","fetch","method","then","getInitialCards","submitProfileData","name","about","body","JSON","stringify","deleteCard","id","addNewCard","link","likeCard","dislikeCard","updateAvatar","avatarUrl","avatar","changeLikeCardStatus","isLiked","api"],"sources":["/home/anteru/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this.authorization = headers.authorization;\n  }\n  \n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`); \n    }\n    return res.json();\n  }\n\n  getUserInfo(url) {\n    return fetch(url, {\n      method: 'GET',\n      headers: {\n        authorization: this.authorization,\n      }\n    })\n    .then(this._getResponseData)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: {\n        authorization: this.authorization,\n      }\n    })\n    .then(this._getResponseData)\n  }\n\n  submitProfileData(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this.authorization,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n    .then(this._getResponseData)\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this.authorization,\n      },\n    })\n    .then(this._getResponseData)\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this.authorization,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n    .then(this._getResponseData)\n  }\n\n  likeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: {\n        authorization: this.authorization,\n      },\n    })\n    .then(this._getResponseData)\n  }\n\n  dislikeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this.authorization,\n      },\n    })\n    .then(this._getResponseData)\n  }\n\n  updateAvatar(avatarUrl) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this.authorization,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: avatarUrl\n      })\n    })\n    .then(this._getResponseData)\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return this.likeCard(id);\n    } else {\n      return this.dislikeCard(id)\n    }\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: `https://mesto.nomoreparties.co/v1/cohort-57`,\n  headers: {\n    authorization: 'cc8211c2-a478-4e6c-819c-a7ec6fb1096c'\n  }\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}