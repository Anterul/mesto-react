{"ast":null,"code":"var _jsxFileName = \"/home/anteru/dev/react-mesto-auth/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { AppContext } from '../contexts/AppContext';\nimport * as Auth from '../utils/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({\n    userName: '',\n    userDescription: '',\n    userAvatar: '',\n    _id: ''\n  });\n  const [cards, setCards] = useState([]);\n  const [buttonText, setButtonText] = useState('Сохранить');\n  const [addPlacePopupButtonText, setAddPlacePopupButtonText] = useState('Создать');\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [isLoggedIn, setIsLogedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleImagePopup() {\n    setIsImagePopupOpen(true);\n  }\n  function handleDeleteButtonClick() {\n    setIsDeleteCardPopupOpen(true);\n  }\n  function handleLogin() {\n    setIsLogedIn(true);\n  }\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n  }\n  useEffect(() => {\n    Promise.all([api.getUserInfo('https://nomoreparties.co/v1/cohort-57/users/me'), api.getInitialCards()]).then(_ref => {\n      let [userData, cardsData] = _ref;\n      setCurrentUser({\n        userName: userData.name,\n        userDescription: userData.about,\n        userAvatar: userData.avatar,\n        _id: userData._id\n      });\n      setCards(cardsData);\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }, []);\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(newCard => {\n      setCards(state => state.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n  function handleUpdateUser(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    setButtonText('Сохранение...');\n    api.submitProfileData(name, about).then(data => {\n      setCurrentUser({\n        userName: data.name,\n        userDescription: data.about,\n        userAvatar: data.avatar,\n        _id: data._id\n      });\n      closeAllPopups();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    }).finally(() => {\n      setButtonText('Сохранить');\n    });\n  }\n  function handleUpdateAvatar(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n    setButtonText('Сохранение...');\n    api.updateAvatar(avatar).then(data => {\n      setCurrentUser({\n        userName: data.name,\n        userDescription: data.about,\n        userAvatar: data.avatar,\n        _id: data._id\n      });\n      closeAllPopups();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    }).finally(() => {\n      setButtonText('Сохранить');\n    });\n  }\n  function handleAddPlaceSubmit(_ref4) {\n    let {\n      name,\n      link\n    } = _ref4;\n    setAddPlacePopupButtonText('Сохранение...');\n    api.addNewCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(`Ошибка: ${error}`);\n    }).finally(() => {\n      setAddPlacePopupButtonText('Создать');\n    });\n  }\n  const navigate = useNavigate();\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      Auth.getContent(jwt).then(res => {\n        if (res) {\n          console.log(res.data.email);\n          setIsLogedIn(true);\n          setEmail(res.email);\n          navigate(\"/\", {\n            replace: true\n          });\n        }\n      });\n    }\n  }\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        state: isLoggedIn,\n        handleLogin: handleLogin\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-content\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            email: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n                exact: true,\n                element: Main,\n                onEditAvatar: handleEditAvatarClick,\n                onEditProfile: handleEditProfileClick,\n                onAddPlace: handleAddPlaceClick,\n                onCardClick: setSelectedCard,\n                handleImagePopup: handleImagePopup,\n                onCardLike: handleCardLike,\n                cards: cards,\n                onCardDelete: handleCardDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/sign-up\",\n              element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/sign-in\",\n              element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n            isOpen: isEditProfilePopupOpen,\n            onClose: closeAllPopups,\n            onUpdateUser: handleUpdateUser,\n            buttonText: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n            isOpen: isAddPlacePopupOpen,\n            onClose: closeAllPopups,\n            onAddPlace: handleAddPlaceSubmit,\n            buttonText: addPlacePopupButtonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n            isOpen: isDeleteCardPopupOpen,\n            onClose: closeAllPopups,\n            onSubmit: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n            isOpen: isEditAvatarPopupOpen,\n            onClose: closeAllPopups,\n            onUpdateAvatar: handleUpdateAvatar,\n            buttonText: buttonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n            card: selectedCard,\n            isOpen: isImagePopupOpen,\n            onClose: closeAllPopups\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/b8DMAF7w8sj+4SKa7wJpsRofEs=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","Navigate","Route","Routes","useNavigate","Login","Register","ProtectedRoute","AppContext","Auth","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","userName","userDescription","userAvatar","_id","cards","setCards","buttonText","setButtonText","addPlacePopupButtonText","setAddPlacePopupButtonText","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","isLoggedIn","setIsLogedIn","email","setEmail","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleImagePopup","handleDeleteButtonClick","handleLogin","closeAllPopups","Promise","all","getUserInfo","getInitialCards","then","userData","cardsData","name","about","avatar","catch","error","console","log","handleCardLike","card","isLiked","likes","some","i","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","submitProfileData","data","finally","handleUpdateAvatar","updateAvatar","handleAddPlaceSubmit","link","addNewCard","navigate","tokenCheck","jwt","localStorage","getItem","getContent","res","replace"],"sources":["/home/anteru/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport { AppContext } from '../contexts/AppContext';\nimport * as Auth from '../utils/Auth';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({\n    userName: '',\n    userDescription: '',\n    userAvatar: '',\n    _id: ''\n  });\n  const [cards, setCards] = useState([]);\n  const [buttonText, setButtonText] = useState('Сохранить');\n  const [addPlacePopupButtonText, setAddPlacePopupButtonText] = useState('Создать');\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [isLoggedIn , setIsLogedIn] = useState(false);\n  const [email, setEmail] = useState('');\n \n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleImagePopup() {\n    setIsImagePopupOpen(true);\n  }\n\n  function handleDeleteButtonClick() {\n    setIsDeleteCardPopupOpen(true);\n  }\n\n  function handleLogin() {\n    setIsLogedIn(true);\n  }\n  \n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsDeleteCardPopupOpen(false)\n  }\n\n  useEffect(() => {\n    Promise.all([\n      api.getUserInfo('https://nomoreparties.co/v1/cohort-57/users/me'),\n      api.getInitialCards()\n    ])\n    .then(([userData, cardsData])=>{\n      setCurrentUser({\n        userName: userData.name,\n        userDescription: userData.about,\n        userAvatar: userData.avatar,\n        _id: userData._id\n      });\n      setCards(cardsData);\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    });\n\n  }, [])\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    api.changeLikeCardStatus(card._id, !isLiked)\n    .then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n    .then((newCard) => {\n      setCards((state) => state.filter((c) => c._id !== card._id));\n      closeAllPopups();\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    });\n  }\n\n  function handleUpdateUser({name, about}) {\n    setButtonText('Сохранение...');\n    api.submitProfileData(name, about)\n    .then((data) => {\n      setCurrentUser({\n        userName: data.name,\n        userDescription: data.about,\n        userAvatar: data.avatar,\n        _id: data._id\n      })\n      closeAllPopups();\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    })\n    .finally(() => {\n      setButtonText('Сохранить');\n    });\n  }\n\n  function handleUpdateAvatar({avatar}) {\n    setButtonText('Сохранение...');\n    api.updateAvatar(avatar)\n    .then((data) => {\n      setCurrentUser({\n        userName: data.name,\n        userDescription: data.about,\n        userAvatar: data.avatar,\n        _id: data._id\n      })\n      closeAllPopups();\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    })\n    .finally(() => {\n      setButtonText('Сохранить');\n    });\n  }\n\n  function handleAddPlaceSubmit({name, link}) {\n    setAddPlacePopupButtonText('Сохранение...');\n    api.addNewCard(name, link)\n    .then((newCard) => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    })\n    .catch((error) => {\n      console.log(`Ошибка: ${error}`);\n    })\n    .finally(() => {\n      setAddPlacePopupButtonText('Создать');\n    });\n  }\n\n  const navigate = useNavigate();\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      Auth.getContent(jwt)\n      .then((res) => {\n        if (res) {\n          console.log(res.data.email)\n          setIsLogedIn(true);\n          setEmail(res.email);\n          navigate(\"/\", {replace: true});\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    tokenCheck();\n  }, [])\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <AppContext.Provider value={{state: isLoggedIn, handleLogin: handleLogin}}>\n        <div className=\"page\">\n          <div className=\"page-content\">\n            <Header\n              email={email}\n            />\n            <Routes>\n              <Route path='/' element={\n                <ProtectedRoute\n                  exact\n                  element={Main}\n                  onEditAvatar={handleEditAvatarClick}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onCardClick={setSelectedCard}\n                  handleImagePopup={handleImagePopup}\n                  onCardLike={handleCardLike}\n                  cards={cards}\n                  onCardDelete={handleCardDelete}\n                />}\n              />\n              <Route path='/sign-up' element={<Register />} />\n              <Route path='/sign-in' element={<Login />} />\n            </Routes>\n            {isLoggedIn && <Footer />}\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n              buttonText={buttonText}\n            />\n            <AddPlacePopup\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n              buttonText={addPlacePopupButtonText}\n            />\n            <DeleteCardPopup\n              isOpen={isDeleteCardPopupOpen}\n              onClose={closeAllPopups}\n              onSubmit={handleCardDelete}\n            />\n            <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n              buttonText={buttonText}\n            />\n            <ImagePopup\n              card={selectedCard}\n              isOpen={isImagePopupOpen}\n              onClose={closeAllPopups}\n            />\n          </div>\n        </div>\n      </AppContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}